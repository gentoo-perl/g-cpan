#!/usr/bin/perl -w
package main;

use strict;
use warnings;

use App::gcpan;

our $VERSION = App::gcpan->VERSION;

App::gcpan->run();

__END__

=head1 NAME

g-cpan - install CPAN-provided Perl modules using Gentoo's Portage

=head1 SYNOPSIS

B<g-cpan> [B<-a>| B<--ask>]  [B<-g>| B<--generate>]  [B<-i>| B<--install>]  [B<-l>| B<--list >]  [B<-p>| B<--pretend >] [B<-s>| B<--search>] [B<-u>| B<--upgrade >] [B<-v>| B<--verbose>]  <I<module-name>>

=head1 DESCRIPTION

B<g-cpan> is a perl script that installs a CPAN module (including its dependencies) using Gentoo's Portage.  It saves dependency information and stored files as if they were installed through a regular ebuild.

=head1 CPAN Configuration

B<~/.cpan/CPAN/MyConfig.pm>
B</path/to/perl/CPAN/Config.pm>

When you run B<g-cpan>, it will check for two configuration files. If you are root, it will check for the presense of an already configured CPAN under your perl install path. If CPAN is not configured, or you are not root, g-cpan will create a generic configuration for CPAN in ~/.cpan/CPAN/ called MyConfig.pm. You can modify this file as needed at any time.

The CPAN configuration file is used for interacting with CPAN, determining what modules are available, what modules are needed, and performing all basic CPAN functions.

=head1 g-cpan and Overlays

B<g-cpan> is now overlay "friendly." B<g-cpan> will scan both the overlays provided in your make.conf as well as any you have set via environment variables, to help determine its course of action. If you have  defined overlays, B<g-cpan> will use the first overlay in your list that the user running it can write to. Any ebuilds generated by B<g-cpan> will be stored in this overlay for future use (such as upgrading).

If no overlays are defined, or the user operating B<g-cpan> cannot write to an overlay, then anything generated will be written to a temporary space and wiped on exit.

If you want to generate ebuilds to a specific overlay, you may set GCPAN_OVERLAY in your make.conf, .gcpanrc or environment.

If you want to generate ebuilds into a specific category, you may set GCPAN_CAT in your make.conf, .gcpanrc or environment.

=head1 Arguments

The following arguments are accepted by g-cpan.

=over 4

=item B<-g,--generate>

Generate ebuilds and drop them in the overlay, but never call portage. Useful for generating a tree of ebuilds without having permissions to portage.

=item B<-i,--install>

Install the (list of) modules provided.

=item B<-l,--list>

List ebuilds that have been generated by g-cpan and reside in your overlay.

=item B<-L,--log>

Log all output to /var/log/g-cpan/g-cpan.log and g-cpan.err

=item B<-s,--search>

Search CPAN for the provided module.

=item B<--cpan_reload>

Reload CPAN's index online

=item B<-u,--upgrade>

Attempt to upgrade any ebuilds generated by g-cpan to newer versions. This option will create new ebuilds for those that exist in your overlay already. If a module name is given, it will attempt to only upgrade the requested module. If no arguments are given, all modules in your g-cpan overlay will be checked.

=item B<-v,--verbose>

Enable verbose mode for more feedback on the step by step processes that g-cpan is running

=back

=head1 Portage Arguments

The following portage arguments can be passed to g-cpan. Please read the portage documentation for more information on how they work.

=over 4

=item B<-a,--ask>

Pass the "ask" argument to portage. This will cause portage to prompt you to confirm your installation prior to issuing an emerge

=item B<-b,--buildpkg>

Tells  emerge to build binary packages for all ebuilds processed in addition to actually merging the packages.

=item B<-B,--buildpkgonly>

Creates  binary packages for all ebuilds processed without actually merging the packages.

=item B<-p,--pretend>

Create ebuilds as needed for the (list of) modules provided, but don't perform the actual emerge.

=back

=head1 USAGE

=head2 Here we install Jabber::RPC

# g-cpan -i Jabber::RPC

=head2 Performing a search

# g-cpan -s Clone::Any

=head2 Upgrading overlay from g-cpan

# g-cpan -u

=head2 Upgrading specifc ebuild in overlay from g-cpan

# g-cpan -u Mickey-Mouse

=head1 SEE ALSO

L<App::gcpan>, L<B<emerge>(1)>, L<B<ebuild>(5)>, L<B<make.conf>(5)>, L<B<perl>(1)>

=head1 AUTHORS

mcummings <mcummings@gentoo.org> cab <cab@gentoo.org> sniper <sniper@mongueurs.net> beu <beu@gentoo.org> J Robert Ray <jrray@gentoo.org> (g-cpan) RAC <rac@gentoo.org>  Sven Vermeulen <swift@gentoo.org> (Original manpage) Damien Krotkine <dams@gentoo.org> Yuval Yaari <yuval@gentoo.org> Robin J Johnson <robbat2@gentoo.org>

=head1 BUGS

Please report bugs via L<https://github.com/gentoo-perl/g-cpan/issues> or L<https://bugs.gentoo.org/>.

=head1 COPYRIGHT AND LICENSE

Copyright 1999-2016 Gentoo Foundation.
Distributed under the terms of the GNU General Public License v2.

=cut
